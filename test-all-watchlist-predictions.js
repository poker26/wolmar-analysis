const { Pool } = require('pg');
const config = require('./config.js');
const CollectionPriceService = require('./collection-price-service.js');

async function testAllWatchlistPredictions() {
    const pool = new Pool(config.dbConfig);
    
    try {
        console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å...');
        const collectionPriceService = new CollectionPriceService(pool);
        await collectionPriceService.init();
        
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ª–æ—Ç—ã –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ ID –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ç–µ—Å—Ç–æ–≤)
        const watchlistLotIds = [90224, 63217, 63219, 63220, 63221, 63222, 63223, 63224, 63225, 63226];
        
        console.log(`üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ—Å—á–µ—Ç –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ –¥–ª—è ${watchlistLotIds.length} –ª–æ—Ç–æ–≤ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ`);
        console.log('üìã ID –ª–æ—Ç–æ–≤:', watchlistLotIds);
        
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–æ—Ç–∞—Ö
        const lotsResult = await pool.query(`
            SELECT id, lot_number, auction_number, coin_description, metal, condition, year, weight, winning_bid
            FROM auction_lots 
            WHERE id = ANY($1)
            ORDER BY id
        `, [watchlistLotIds]);
        
        console.log(`üìö –ù–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑–µ: ${lotsResult.rows.length} –ª–æ—Ç–æ–≤`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º –ª–æ—Ç–µ
        lotsResult.rows.forEach((lot, index) => {
            console.log(`\n${index + 1}. –õ–æ—Ç ${lot.lot_number} (–∞—É–∫—Ü–∏–æ–Ω ${lot.auction_number}):`);
            console.log(`   –ú–µ—Ç–∞–ª–ª: ${lot.metal}, –°–æ—Å—Ç–æ—è–Ω–∏–µ: ${lot.condition}, –ì–æ–¥: ${lot.year}`);
            console.log(`   –í–µ—Å: ${lot.weight || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
            console.log(`   –¢–µ–∫—É—â–∞—è —Å—Ç–∞–≤–∫–∞: ${lot.winning_bid ? parseFloat(lot.winning_bid).toLocaleString() + '‚ÇΩ' : '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}`);
            console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${lot.coin_description?.substring(0, 100)}...`);
        });
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ—Å—á–µ—Ç –ø—Ä–æ–≥–Ω–æ–∑–æ–≤
        console.log('\nüîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ—Å—á–µ—Ç –ø—Ä–æ–≥–Ω–æ–∑–Ω—ã—Ö —Ü–µ–Ω...');
        const result = await collectionPriceService.recalculateLotPredictions(watchlistLotIds);
        
        console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ—Å—á–µ—Ç–∞:');
        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${result.updated} –ª–æ—Ç–æ–≤`);
        console.log(`‚ùå –û—à–∏–±–æ–∫: ${result.errors}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –±–∞–∑–µ
        console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
        const predictionsResult = await pool.query(`
            SELECT 
                lpp.lot_id,
                al.lot_number,
                al.auction_number,
                lpp.predicted_price,
                lpp.confidence_score,
                lpp.prediction_method,
                lpp.created_at
            FROM lot_price_predictions lpp
            JOIN auction_lots al ON lpp.lot_id = al.id
            WHERE lpp.lot_id = ANY($1)
            ORDER BY lpp.lot_id
        `, [watchlistLotIds]);
        
        console.log(`üìà –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤: ${predictionsResult.rows.length}`);
        predictionsResult.rows.forEach(pred => {
            const price = pred.predicted_price ? parseFloat(pred.predicted_price).toLocaleString() + '‚ÇΩ' : 'null';
            const confidence = pred.confidence_score ? (pred.confidence_score * 100).toFixed(0) + '%' : '0%';
            const method = pred.prediction_method || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
            const date = pred.created_at ? new Date(pred.created_at).toLocaleString('ru-RU') : '–Ω–µ —É–∫–∞–∑–∞–Ω–∞';
            
            console.log(`   –õ–æ—Ç ${pred.lot_number}: ${price} (${method}, ${confidence}) - ${date}`);
        });
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    } finally {
        await pool.end();
    }
}

testAllWatchlistPredictions();
