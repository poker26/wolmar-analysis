const { Pool } = require('pg');
const config = require('./config');

async function testAuctionLotsStructure() {
    const pool = new Pool(config.dbConfig);
    
    try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã auction_lots...');
        
        // –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        const structureQuery = `
            SELECT column_name, data_type, is_nullable
            FROM information_schema.columns 
            WHERE table_name = 'auction_lots'
            ORDER BY ordinal_position
        `;
        
        const structureResult = await pool.query(structureQuery);
        console.log('üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã auction_lots:');
        structureResult.rows.forEach(row => {
            console.log(`   ${row.column_name}: ${row.data_type} (${row.is_nullable === 'YES' ? 'nullable' : 'not null'})`);
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—è country, rarity, mint
        const hasCountry = structureResult.rows.some(row => row.column_name === 'country');
        const hasRarity = structureResult.rows.some(row => row.column_name === 'rarity');
        const hasMint = structureResult.rows.some(row => row.column_name === 'mint');
        
        console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–µ–π:');
        console.log(`   country: ${hasCountry ? '‚úÖ –ï—Å—Ç—å' : '‚ùå –ù–µ—Ç'}`);
        console.log(`   rarity: ${hasRarity ? '‚úÖ –ï—Å—Ç—å' : '‚ùå –ù–µ—Ç'}`);
        console.log(`   mint: ${hasMint ? '‚úÖ –ï—Å—Ç—å' : '‚ùå –ù–µ—Ç'}`);
        
        // –ï—Å–ª–∏ –ø–æ–ª–µ–π –Ω–µ—Ç, –ø—Ä–æ–≤–µ—Ä–∏–º —Ç–∞–±–ª–∏—Ü—É coin_catalog
        if (!hasCountry || !hasRarity || !hasMint) {
            console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É coin_catalog...');
            const catalogStructureQuery = `
                SELECT column_name, data_type, is_nullable
                FROM information_schema.columns 
                WHERE table_name = 'coin_catalog'
                AND column_name IN ('country', 'rarity', 'mint')
                ORDER BY ordinal_position
            `;
            
            const catalogResult = await pool.query(catalogStructureQuery);
            console.log('üìä –ü–æ–ª—è –≤ coin_catalog:');
            catalogResult.rows.forEach(row => {
                console.log(`   ${row.column_name}: ${row.data_type} (${row.is_nullable === 'YES' ? 'nullable' : 'not null'})`);
            });
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π –∏–∑ auction_lots
        console.log('\nüîç –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π –∏–∑ auction_lots:');
        const sampleQuery = `
            SELECT lot_number, coin_description, metal, condition, year, letters
            FROM auction_lots 
            WHERE auction_number = (SELECT auction_number FROM auction_lots ORDER BY auction_number DESC LIMIT 1)
            LIMIT 3
        `;
        
        const sampleResult = await pool.query(sampleQuery);
        sampleResult.rows.forEach((row, index) => {
            console.log(`   –õ–æ—Ç ${index + 1}: ${row.lot_number} - ${row.coin_description?.substring(0, 50)}...`);
            console.log(`      –ú–µ—Ç–∞–ª–ª: ${row.metal}, –°–æ—Å—Ç–æ—è–Ω–∏–µ: ${row.condition}, –ì–æ–¥: ${row.year}, –ë—É–∫–≤—ã: ${row.letters}`);
        });
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    } finally {
        await pool.end();
    }
}

testAuctionLotsStructure();
