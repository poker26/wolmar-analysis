const puppeteer = require('puppeteer-core');
const config = require('./config');

async function debugNumismatPage(auctionNumber, pageNumber = 1) {
    const browser = await puppeteer.launch({...config.browserConfig,
        headless: false // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏,
            args: [
                '--user-data-dir=/tmp/chrome-temp-bxyh3',
                '--disable-metrics',
                '--disable-metrics-reporting',
                '--disable-background-mode',
                '--disable-background-timer-throttling',
                '--disable-renderer-backgrounding',
                '--disable-backgrounding-occluded-windows',
                '--disable-logging',
                '--disable-gpu-logging',
                '--disable-features=TranslateUI,BlinkGenPropertyTrees,VizDisplayCompositor'
            ]});
    
    const page = await browser.newPage();
    await page.setUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36');
    
    try {
        const auctionUrl = pageNumber === 1 ? 
            `https://numismat.ru/au.shtml?au=${auctionNumber}` : 
            `https://numismat.ru/au.shtml?au=${auctionNumber}&page=${pageNumber}`;
        
        console.log(`üîç –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É: ${auctionUrl}`);
        await page.goto(auctionUrl, { waitUntil: 'domcontentloaded', timeout: 30000 });
        await new Promise(resolve => setTimeout(resolve, 3000));
        
        // –ü–æ–ª—É—á–∞–µ–º HTML —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const pageStructure = await page.evaluate(() => {
            const structure = {
                title: document.title,
                h1: document.querySelector('h1')?.textContent,
                bodyText: document.body.textContent.substring(0, 1000),
                lotElements: [],
                allElements: []
            };
            
            // –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ª–æ—Ç—ã
            const possibleLotSelectors = [
                'h3', 'h4', 'h5', 'h6',
                '.lot', '[class*="lot"]',
                'tr', 'td', 'div',
                '.auction-item', '.item',
                'p', 'span'
            ];
            
            possibleLotSelectors.forEach(selector => {
                const elements = document.querySelectorAll(selector);
                elements.forEach((el, index) => {
                    const text = el.textContent.trim();
                    if (text.includes('–õ–æ—Ç') || text.includes('–°—Ç–∞—Ä—Ç:') || text.includes('‚ÇΩ')) {
                        structure.lotElements.push({
                            selector: selector,
                            index: index,
                            text: text.substring(0, 200),
                            html: el.outerHTML.substring(0, 500)
                        });
                    }
                });
            });
            
            // –¢–∞–∫–∂–µ –ø–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            const allElements = document.querySelectorAll('*');
            allElements.forEach((el, index) => {
                if (index < 50) { // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                    structure.allElements.push({
                        tagName: el.tagName,
                        className: el.className,
                        id: el.id,
                        text: el.textContent?.substring(0, 100)
                    });
                }
            });
            
            return structure;
        });
        
        console.log('\nüìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:');
        console.log('Title:', pageStructure.title);
        console.log('H1:', pageStructure.h1);
        console.log('\nüìù –ü–µ—Ä–≤—ã–µ 1000 —Å–∏–º–≤–æ–ª–æ–≤ —Ç–µ–∫—Å—Ç–∞:');
        console.log(pageStructure.bodyText);
        
        console.log('\nüîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –ª–æ—Ç–∞–º–∏:');
        pageStructure.lotElements.forEach((el, index) => {
            console.log(`\n${index + 1}. –°–µ–ª–µ–∫—Ç–æ—Ä: ${el.selector}`);
            console.log(`   –¢–µ–∫—Å—Ç: ${el.text}`);
            console.log(`   HTML: ${el.html}`);
        });
        
        console.log('\nüèóÔ∏è –û–±—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–ø–µ—Ä–≤—ã–µ 50 —ç–ª–µ–º–µ–Ω—Ç–æ–≤):');
        pageStructure.allElements.forEach((el, index) => {
            console.log(`${index + 1}. ${el.tagName}${el.className ? '.' + el.className : ''}${el.id ? '#' + el.id : ''}: ${el.text}`);
        });
        
        // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
        await page.screenshot({ path: `debug-numismat-${auctionNumber}-page${pageNumber}.png`, fullPage: true });
        console.log(`\nüì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: debug-numismat-${auctionNumber}-page${pageNumber}.png`);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ª–∞–¥–∫–∏:', error.message);
    } finally {
        await browser.close();
    }
}

// –ó–∞–ø—É—Å–∫ –æ—Ç–ª–∞–¥–∫–∏
if (require.main === module) {
    const args = process.argv.slice(2);
    const auctionNumber = args[0] || '1054';
    const pageNumber = parseInt(args[1]) || 1;
    
    console.log(`üîç –û—Ç–ª–∞–¥–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∞—É–∫—Ü–∏–æ–Ω–∞ ${auctionNumber}, —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber}`);
    debugNumismatPage(auctionNumber, pageNumber);
}
