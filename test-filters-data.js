const { Pool } = require('pg');
const config = require('./config');

async function testFiltersData() {
    const pool = new Pool(config.dbConfig);
    
    try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ—Ç–æ–≤
        const totalLots = await pool.query('SELECT COUNT(*) FROM auction_lots');
        console.log(`üìä –í—Å–µ–≥–æ –ª–æ—Ç–æ–≤ –≤ –±–∞–∑–µ: ${totalLots.rows[0].count}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ—Ç—ã —Å –º–µ—Ç–∞–ª–ª–æ–º
        const lotsWithMetal = await pool.query(`
            SELECT COUNT(*) FROM auction_lots 
            WHERE metal IS NOT NULL AND metal != ''
        `);
        console.log(`ü•á –õ–æ—Ç–æ–≤ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –º–µ—Ç–∞–ª–ª–æ–º: ${lotsWithMetal.rows[0].count}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –º–µ—Ç–∞–ª–ª—ã
        const metals = await pool.query(`
            SELECT DISTINCT metal, COUNT(*) as count
            FROM auction_lots 
            WHERE metal IS NOT NULL AND metal != ''
            GROUP BY metal
            ORDER BY count DESC
        `);
        console.log('ü•á –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –º–µ—Ç–∞–ª–ª—ã:');
        metals.rows.forEach(row => {
            console.log(`   ${row.metal}: ${row.count} –ª–æ—Ç–æ–≤`);
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        const conditions = await pool.query(`
            SELECT DISTINCT condition, COUNT(*) as count
            FROM auction_lots 
            WHERE condition IS NOT NULL AND condition != ''
            GROUP BY condition
            ORDER BY count DESC
        `);
        console.log('üíé –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è:');
        conditions.rows.forEach(row => {
            console.log(`   ${row.condition}: ${row.count} –ª–æ—Ç–æ–≤`);
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∞—É–∫—Ü–∏–æ–Ω—ã
        const recentAuctions = await pool.query(`
            SELECT auction_number, COUNT(*) as lots_count
            FROM auction_lots 
            GROUP BY auction_number
            ORDER BY auction_number DESC
            LIMIT 5
        `);
        console.log('üèÜ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∞—É–∫—Ü–∏–æ–Ω–æ–≤:');
        recentAuctions.rows.forEach(row => {
            console.log(`   –ê—É–∫—Ü–∏–æ–Ω ${row.auction_number}: ${row.lots_count} –ª–æ—Ç–æ–≤`);
        });
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    } finally {
        await pool.end();
    }
}

testFiltersData();
