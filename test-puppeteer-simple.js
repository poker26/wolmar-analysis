const puppeteer = require('puppeteer-core');

async function testPuppeteerSimple() {
    console.log('üß™ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç Puppeteer...\n');
    
    const executablePaths = [
        process.env.PUPPETEER_EXECUTABLE_PATH,
        '/usr/bin/chromium-browser',
        '/usr/bin/chromium',
        '/usr/bin/google-chrome',
        '/snap/bin/chromium'
    ].filter(Boolean);
    
    console.log('üìã –ü—Ä–æ–±—É–µ–º –ø—É—Ç–∏ –∫ –±—Ä–∞—É–∑–µ—Ä—É:');
    executablePaths.forEach((path, index) => {
        console.log(`   ${index + 1}. ${path}`);
    });
    console.log('');
    
    let browser;
    let lastError;
    
    for (const executablePath of executablePaths) {
        try {
            console.log(`üîç –ü—Ä–æ–±—É–µ–º: ${executablePath}`);
            browser = await puppeteer.launch({
                executablePath,
                headless: true,
                args: [
                    '--no-sandbox', 
                    '--disable-setuid-sandbox',
                    '--disable-dev-shm-usage',
                    '--disable-gpu',
                    '--user-data-dir=/tmp/chrome-user-data'
                ]
            });
            console.log(`‚úÖ –£–°–ü–ï–•! –ë—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω: ${executablePath}`);
            break;
        } catch (error) {
            console.log(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
            lastError = error;
            continue;
        }
    }
    
    if (!browser) {
        console.log(`\nüí• –ù–ï –£–î–ê–õ–û–°–¨ –ó–ê–ü–£–°–¢–ò–¢–¨ –ë–†–ê–£–ó–ï–†!`);
        console.log(`–ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: ${lastError.message}`);
        return false;
    }
    
    try {
        const page = await browser.newPage();
        console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞');
        
        await page.goto('https://www.google.com', { waitUntil: 'domcontentloaded', timeout: 10000 });
        console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
        
        const title = await page.title();
        console.log(`üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${title}`);
        
        await browser.close();
        console.log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç');
        
        console.log('\nüéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù –£–°–ü–ï–®–ù–û!');
        return true;
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∞:', error.message);
        await browser.close();
        return false;
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testPuppeteerSimple();
