const { cleanupChromeTempFiles } = require('./puppeteer-utils');
const fs = require('fs');
const path = require('path');

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤ –º–µ—Ç—Ä–∏–∫ Chrome
 * –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ cron
 */

async function cleanupChromeMetrics() {
    console.log('üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É —Ñ–∞–π–ª–æ–≤ –º–µ—Ç—Ä–∏–∫ Chrome...');
    
    try {
        // –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —á–µ—Ä–µ–∑ puppeteer-utils
        cleanupChromeTempFiles();
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ –º–µ—Ç—Ä–∏–∫
        const metricsDir = '/root/.config/google-chrome/BrowserMetrics';
        if (fs.existsSync(metricsDir)) {
            const files = fs.readdirSync(metricsDir);
            let deletedCount = 0;
            let totalSize = 0;
            
            files.forEach(file => {
                if (file.startsWith('BrowserMetrics-') && file.endsWith('.pma')) {
                    try {
                        const filePath = path.join(metricsDir, file);
                        const stats = fs.statSync(filePath);
                        totalSize += stats.size;
                        
                        fs.unlinkSync(filePath);
                        deletedCount++;
                        console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª –º–µ—Ç—Ä–∏–∫: ${file} (${(stats.size / 1024 / 1024).toFixed(2)} MB)`);
                    } catch (error) {
                        console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å ${file}: ${error.message}`);
                    }
                }
            });
            
            console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ ${deletedCount} —Ñ–∞–π–ª–æ–≤ –º–µ—Ç—Ä–∏–∫`);
            console.log(`üíæ –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ –º–µ—Å—Ç–∞: ${(totalSize / 1024 / 1024).toFixed(2)} MB`);
        } else {
            console.log('üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –º–µ—Ç—Ä–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
        
        // –û—á–∏—â–∞–µ–º –¥—Ä—É–≥–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã Chrome
        const tempDirs = [
            '/tmp/chrome-user-data-*',
            '/tmp/.com.google.Chrome.*',
            '/tmp/.org.chromium.Chromium.*',
            '/tmp/.X11-unix/X*'
        ];
        
        const { exec } = require('child_process');
        
        tempDirs.forEach(pattern => {
            exec(`rm -rf ${pattern}`, (error) => {
                if (error && !error.message.includes('No such file')) {
                    console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å ${pattern}: ${error.message}`);
                } else {
                    console.log(`‚úÖ –û—á–∏—â–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${pattern}`);
                }
            });
        });
        
        console.log('üéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ:', error.message);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É
cleanupChromeMetrics();
