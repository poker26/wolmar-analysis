const { Pool } = require('pg');
const config = require('./config');

async function checkLotBidsStructure() {
    console.log('üîç –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´ –¢–ê–ë–õ–ò–¶–´ lot_bids');
    console.log('=====================================');
    
    const pool = new Pool(config.database);
    
    try {
        console.log('\n1Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
        
        console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã lot_bids...');
        const result = await pool.query(`
            SELECT column_name, data_type, is_nullable 
            FROM information_schema.columns 
            WHERE table_name = 'lot_bids' 
            ORDER BY ordinal_position
        `);
        
        console.log('üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã lot_bids:');
        result.rows.forEach((row, index) => {
            console.log(`   ${index + 1}. ${row.column_name} (${row.data_type}) - ${row.is_nullable === 'YES' ? 'NULL' : 'NOT NULL'}`);
        });
        
        console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ...');
        const countResult = await pool.query('SELECT COUNT(*) as count FROM lot_bids');
        console.log(`üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ lot_bids: ${countResult.rows[0].count}`);
        
        if (countResult.rows[0].count > 0) {
            const sampleResult = await pool.query('SELECT * FROM lot_bids LIMIT 3');
            console.log('\nüìã –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π:');
            sampleResult.rows.forEach((row, index) => {
                console.log(`   ${index + 1}. ${JSON.stringify(row, null, 2)}`);
            });
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    } finally {
        await pool.end();
    }
}

if (require.main === module) {
    checkLotBidsStructure();
}
