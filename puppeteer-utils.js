/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Puppeteer
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Debian —Å–µ—Ä–≤–µ—Ä–∞
 */

const puppeteer = require('puppeteer');
const fs = require('fs');
const path = require('path');

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Puppeteer –Ω–∞ Debian —Å–µ—Ä–≤–µ—Ä–µ
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Ö–æ–¥–∏—Ç –±—Ä–∞—É–∑–µ—Ä –≤ —Å–∏—Å—Ç–µ–º–µ
 */
async function launchPuppeteer(options = {}) {
    const defaultOptions = {
        headless: true,
        args: [
            '--no-sandbox',
            '--disable-setuid-sandbox',
            '--disable-dev-shm-usage',
            '--disable-gpu',
            '--disable-background-timer-throttling',
            '--disable-backgrounding-occluded-windows',
            '--disable-renderer-backgrounding',
            '--disable-features=TranslateUI',
            '--disable-ipc-flooding-protection',
            '--disable-hang-monitor',
            '--disable-prompt-on-repost',
            '--disable-sync',
            '--disable-default-apps',
            '--disable-extensions',
            '--disable-plugins',
            '--disable-images',
            '--disable-javascript',
            '--disable-web-security',
            '--disable-features=VizDisplayCompositor',
            '--disable-logging',
            '--disable-permissions-api',
            '--disable-presentation-api',
            '--disable-print-preview',
            '--disable-speech-api',
            '--disable-file-system',
            '--disable-notifications',
            '--disable-background-networking',
            '--disable-background-sync',
            '--disable-client-side-phishing-detection',
            '--disable-component-extensions-with-background-pages',
            '--disable-domain-reliability',
            '--disable-features=AudioServiceOutOfProcess',
            '--disable-hang-monitor',
            '--disable-prompt-on-repost',
            '--disable-sync',
            '--metrics-recording-only',
            '--no-first-run',
            '--no-default-browser-check',
            '--no-pings',
            '--password-store=basic',
            '--use-mock-keychain',
            '--disable-blink-features=AutomationControlled',
            '--disable-features=VizDisplayCompositor',
            '--user-data-dir=/tmp/chrome-user-data-' + Math.random().toString(36).substring(7)
        ]
    };

    // –û–±—ä–µ–¥–∏–Ω—è–µ–º –æ–ø—Ü–∏–∏
    const launchOptions = { ...defaultOptions, ...options };

    // –î–ª—è Debian –ø–æ–∑–≤–æ–ª—è–µ–º Puppeteer —Å–∞–º–æ–º—É –Ω–∞–π—Ç–∏ –±—Ä–∞—É–∑–µ—Ä
    console.log(`üîç –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä (Debian): –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ`);
    
    return await puppeteer.launch(launchOptions);
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
 */
async function createPage(browser) {
    const page = await browser.newPage();
    await page.setUserAgent('Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36');
    return page;
}

/**
 * –û—á–∏—â–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã Chrome
 */
function cleanupChromeTempFiles() {
    try {
        // –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ Chrome
        const tempDirs = [
            '/tmp/chrome-user-data-*',
            '/tmp/.com.google.Chrome.*',
            '/tmp/.org.chromium.Chromium.*'
        ];
        
        tempDirs.forEach(pattern => {
            const { exec } = require('child_process');
            exec(`rm -rf ${pattern}`, (error) => {
                if (error && !error.message.includes('No such file')) {
                    console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å ${pattern}: ${error.message}`);
                }
            });
        });
        
        // –û—á–∏—â–∞–µ–º —Ñ–∞–π–ª—ã –º–µ—Ç—Ä–∏–∫ Chrome
        const metricsDir = '/root/.config/google-chrome/BrowserMetrics';
        if (fs.existsSync(metricsDir)) {
            const files = fs.readdirSync(metricsDir);
            files.forEach(file => {
                if (file.startsWith('BrowserMetrics-') && file.endsWith('.pma')) {
                    try {
                        fs.unlinkSync(path.join(metricsDir, file));
                        console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª –º–µ—Ç—Ä–∏–∫: ${file}`);
                    } catch (error) {
                        console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å ${file}: ${error.message}`);
                    }
                }
            });
        }
        
        console.log('‚úÖ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ Chrome –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    } catch (error) {
        console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: ${error.message}`);
    }
}

module.exports = {
    launchPuppeteer,
    createPage,
    cleanupChromeTempFiles
};
