const { Pool } = require('pg');
const config = require('./config');

const pool = new Pool(config.dbConfig);

async function checkWeightFields() {
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø–æ–ª—è, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≤–µ—Å–æ–º
        const tableInfo = await pool.query(`
            SELECT column_name, data_type, is_nullable
            FROM information_schema.columns 
            WHERE table_name = 'auction_lots' 
            AND (column_name ILIKE '%weight%' OR column_name ILIKE '%–≤–µ—Å%' OR column_name ILIKE '%–º–∞—Å—Å–∞%')
            ORDER BY ordinal_position
        `);
        
        console.log('üìã –ü–æ–ª—è, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≤–µ—Å–æ–º –≤ auction_lots:');
        if (tableInfo.rows.length === 0) {
            console.log('  - –ü–æ–ª—è —Å –≤–µ—Å–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        } else {
            tableInfo.rows.forEach(row => {
                console.log(`  - ${row.column_name}: ${row.data_type} (nullable: ${row.is_nullable})`);
            });
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π —Å —Ä–∞–∑–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ weight
        const weightStats = await pool.query(`
            SELECT 
                COUNT(*) as total_lots,
                COUNT(weight) as lots_with_weight,
                COUNT(*) - COUNT(weight) as lots_without_weight
            FROM auction_lots
        `);
        
        console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤–µ—Å—É:');
        console.log(`  - –í—Å–µ–≥–æ –ª–æ—Ç–æ–≤: ${weightStats.rows[0].total_lots}`);
        console.log(`  - –° –≤–µ—Å–æ–º: ${weightStats.rows[0].lots_with_weight}`);
        console.log(`  - –ë–µ–∑ –≤–µ—Å–∞: ${weightStats.rows[0].lots_without_weight}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–º–µ—Ä—ã –ª–æ—Ç–æ–≤ —Å –≤–µ—Å–æ–º
        const lotsWithWeight = await pool.query(`
            SELECT id, lot_number, coin_description, weight, metal
            FROM auction_lots
            WHERE weight IS NOT NULL
            ORDER BY id DESC
            LIMIT 5
        `);
        
        console.log('\nüìã –ü—Ä–∏–º–µ—Ä—ã –ª–æ—Ç–æ–≤ –° –≤–µ—Å–æ–º:');
        lotsWithWeight.rows.forEach((lot, index) => {
            console.log(`  ${index + 1}. –õ–æ—Ç ${lot.lot_number}: –≤–µ—Å ${lot.weight}–≥, –º–µ—Ç–∞–ª–ª ${lot.metal}`);
            console.log(`     –û–ø–∏—Å–∞–Ω–∏–µ: ${lot.coin_description?.substring(0, 80)}...`);
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–º–µ—Ä—ã –ª–æ—Ç–æ–≤ –±–µ–∑ –≤–µ—Å–∞
        const lotsWithoutWeight = await pool.query(`
            SELECT id, lot_number, coin_description, weight, metal
            FROM auction_lots
            WHERE weight IS NULL
            ORDER BY id DESC
            LIMIT 5
        `);
        
        console.log('\nüìã –ü—Ä–∏–º–µ—Ä—ã –ª–æ—Ç–æ–≤ –ë–ï–ó –≤–µ—Å–∞:');
        lotsWithoutWeight.rows.forEach((lot, index) => {
            console.log(`  ${index + 1}. –õ–æ—Ç ${lot.lot_number}: –≤–µ—Å ${lot.weight}, –º–µ—Ç–∞–ª–ª ${lot.metal}`);
            console.log(`     –û–ø–∏—Å–∞–Ω–∏–µ: ${lot.coin_description?.substring(0, 80)}...`);
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤–µ—Å –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ —É –ª–æ—Ç–æ–≤ –±–µ–∑ –≤–µ—Å–∞
        console.log('\nüîç –ü–æ–∏—Å–∫ –≤–µ—Å–∞ –≤ –æ–ø–∏—Å–∞–Ω–∏—è—Ö –ª–æ—Ç–æ–≤ –±–µ–∑ –≤–µ—Å–∞:');
        for (const lot of lotsWithoutWeight.rows.slice(0, 3)) {
            if (lot.coin_description) {
                const weightMatch = lot.coin_description.match(/(\d+(?:[.,]\d+)?)\s*(?:–≥—Ä|–≥|gram|g)/i);
                if (weightMatch) {
                    console.log(`  ‚úÖ –õ–æ—Ç ${lot.lot_number}: –Ω–∞–π–¥–µ–Ω –≤–µ—Å "${weightMatch[0]}" –≤ –æ–ø–∏—Å–∞–Ω–∏–∏`);
                } else {
                    console.log(`  ‚ùå –õ–æ—Ç ${lot.lot_number}: –≤–µ—Å –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω`);
                }
            }
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    } finally {
        await pool.end();
    }
}

checkWeightFields();
