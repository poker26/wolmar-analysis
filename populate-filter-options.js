const { Pool } = require('pg');
const config = require('./config');

async function populateFilterOptions() {
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç—ã –¥–ª—è Supabase
    const dbConfig = {
        ...config.dbConfig,
        connectionTimeoutMillis: 30000,
        idleTimeoutMillis: 60000,
        query_timeout: 30000
    };
    
    const pool = new Pool(dbConfig);
    
    try {
        console.log('üîå –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        await pool.query('SELECT 1');
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ');
        
        // –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
        console.log('üóëÔ∏è –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É...');
        await pool.query('DELETE FROM filter_options');
        console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ –æ—á–∏—â–µ–Ω–∞');
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ coin_catalog
        console.log('üìä –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ coin_catalog...');
        
        // –°—Ç—Ä–∞–Ω—ã
        console.log('üåç –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω—ã...');
        const countriesQuery = `
            INSERT INTO filter_options (type, value, display_name)
            SELECT DISTINCT 'country', country, country 
            FROM coin_catalog 
            WHERE country IS NOT NULL AND country != ''
            ORDER BY country
        `;
        
        const countriesResult = await pool.query(countriesQuery);
        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${countriesResult.rowCount} —Å—Ç—Ä–∞–Ω`);
        
        // –†–µ–¥–∫–æ—Å—Ç–∏
        console.log('‚≠ê –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–¥–∫–æ—Å—Ç–∏...');
        const raritiesQuery = `
            INSERT INTO filter_options (type, value, display_name)
            SELECT DISTINCT 'rarity', rarity, rarity 
            FROM coin_catalog 
            WHERE rarity IS NOT NULL AND rarity != ''
            ORDER BY rarity
        `;
        
        const raritiesResult = await pool.query(raritiesQuery);
        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${raritiesResult.rowCount} —Ä–µ–¥–∫–æ—Å—Ç–µ–π`);
        
        // –ú–æ–Ω–µ—Ç–Ω—ã–µ –¥–≤–æ—Ä—ã
        console.log('üèõÔ∏è –î–æ–±–∞–≤–ª—è–µ–º –º–æ–Ω–µ—Ç–Ω—ã–µ –¥–≤–æ—Ä—ã...');
        const mintsQuery = `
            INSERT INTO filter_options (type, value, display_name)
            SELECT DISTINCT 'mint', mint, mint 
            FROM coin_catalog 
            WHERE mint IS NOT NULL AND mint != ''
            ORDER BY mint
        `;
        
        const mintsResult = await pool.query(mintsQuery);
        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${mintsResult.rowCount} –º–æ–Ω–µ—Ç–Ω—ã—Ö –¥–≤–æ—Ä–æ–≤`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        console.log('üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...');
        const totalQuery = `
            SELECT type, COUNT(*) as count 
            FROM filter_options 
            GROUP BY type 
            ORDER BY type
        `;
        
        const totalResult = await pool.query(totalQuery);
        console.log('üìã –ò—Ç–æ–≥–æ –≤ —Ç–∞–±–ª–∏—Ü–µ:');
        totalResult.rows.forEach(row => {
            console.log(`   ${row.type}: ${row.count} –∑–∞–ø–∏—Å–µ–π`);
        });
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
        const examplesQuery = `
            SELECT type, value, display_name 
            FROM filter_options 
            ORDER BY type, display_name 
            LIMIT 15
        `;
        
        const examplesResult = await pool.query(examplesQuery);
        console.log('\nüìù –ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö:');
        examplesResult.rows.forEach(row => {
            console.log(`   ${row.type}: "${row.value}" -> "${row.display_name}"`);
        });
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    } finally {
        await pool.end();
    }
}

populateFilterOptions();

