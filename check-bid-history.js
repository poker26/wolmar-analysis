const { Pool } = require('pg');
const config = require('./config');

async function checkBidHistory() {
    console.log('üîç –ü–†–û–í–ï–†–ö–ê –ò–°–¢–û–†–ò–ò –°–¢–ê–í–û–ö');
    console.log('==========================');
    
    const pool = new Pool(config.dbConfig);
    
    try {
        console.log('\n1Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
        
        console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É lot_bids...');
        const tableExists = await pool.query(`
            SELECT EXISTS (
                SELECT FROM information_schema.tables 
                WHERE table_name = 'lot_bids'
            );
        `);
        console.log(`üìä –¢–∞–±–ª–∏—Ü–∞ lot_bids —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${tableExists.rows[0].exists}`);
        
        if (tableExists.rows[0].exists) {
            console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ lot_bids...');
            const countResult = await pool.query('SELECT COUNT(*) as count FROM lot_bids');
            console.log(`üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ lot_bids: ${countResult.rows[0].count}`);
            
            if (countResult.rows[0].count > 0) {
                console.log('\n4Ô∏è‚É£ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø–∏—Å–µ–π...');
                const recentBids = await pool.query(`
                    SELECT lb.*, al.coin_description
                    FROM lot_bids lb
                    LEFT JOIN auction_lots al ON lb.lot_id = al.id
                    ORDER BY lb.id DESC
                    LIMIT 10
                `);
                
                console.log('üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç–∞–≤–æ–∫:');
                recentBids.rows.forEach((bid, index) => {
                    console.log(`   ${index + 1}. –õ–æ—Ç ${bid.lot_number} | ${bid.amount} —Ä—É–±. | ${bid.bidder} | ${bid.timestamp} | –ê–≤—Ç–æ–±–∏–¥: ${bid.is_auto_bid ? '–î–∞' : '–ù–µ—Ç'}`);
                    console.log(`      –û–ø–∏—Å–∞–Ω–∏–µ: ${bid.coin_description?.substring(0, 50)}...`);
                });
                
                console.log('\n5Ô∏è‚É£ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∞–≤—Ç–æ–±–∏–¥–∞–º...');
                const autobidStats = await pool.query(`
                    SELECT 
                        COUNT(*) as total_bids,
                        COUNT(CASE WHEN is_auto_bid = true THEN 1 END) as autobids,
                        COUNT(CASE WHEN is_auto_bid = false THEN 1 END) as manual_bids
                    FROM lot_bids
                `);
                const stats = autobidStats.rows[0];
                console.log(`üìä –í—Å–µ–≥–æ —Å—Ç–∞–≤–æ–∫: ${stats.total_bids}`);
                console.log(`üìä –ê–≤—Ç–æ–±–∏–¥–æ–≤: ${stats.autobids} (${Math.round(stats.autobids / stats.total_bids * 100)}%)`);
                console.log(`üìä –†—É—á–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫: ${stats.manual_bids} (${Math.round(stats.manual_bids / stats.total_bids * 100)}%)`);
            }
        } else {
            console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ lot_bids –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –µ—ë.');
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
        console.error('‚ùå –°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error.stack);
    } finally {
        await pool.end();
    }
}

if (require.main === module) {
    checkBidHistory();
}
