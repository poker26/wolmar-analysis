const { Pool } = require('pg');
const config = require('./config.js');

async function checkWatchlist() {
    const pool = new Pool(config.dbConfig);
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã user_sessions
        const tableInfo = await pool.query(`
            SELECT column_name, data_type 
            FROM information_schema.columns 
            WHERE table_name = 'user_sessions'
            ORDER BY ordinal_position
        `);
        
        console.log('üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã user_sessions:');
        tableInfo.rows.forEach(col => {
            console.log(`  - ${col.column_name}: ${col.data_type}`);
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ localStorage
        const sessionsResult = await pool.query(`
            SELECT * 
            FROM user_sessions 
            LIMIT 1
        `);
        
        if (sessionsResult.rows.length === 0) {
            console.log('‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ localStorage');
            return;
        }
        
        const localStorageData = sessionsResult.rows[0].localStorage_data;
        console.log('üì± localStorage –¥–∞–Ω–Ω—ã–µ:', localStorageData);
        
        // –ü–∞—Ä—Å–∏–º ID –ª–æ—Ç–æ–≤
        const lotIds = localStorageData.split(',').map(id => parseInt(id.trim())).filter(id => !isNaN(id));
        console.log('üìä –ù–∞–π–¥–µ–Ω–æ –ª–æ—Ç–æ–≤ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º:', lotIds.length);
        console.log('üìã ID –ª–æ—Ç–æ–≤:', lotIds);
        
        if (lotIds.length === 0) {
            console.log('‚ùå –ù–µ—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö ID –ª–æ—Ç–æ–≤');
            return;
        }
        
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–æ—Ç–∞—Ö
        const lotsResult = await pool.query(`
            SELECT id, lot_number, auction_number, coin_description, metal, condition, year, weight
            FROM auction_lots 
            WHERE id = ANY($1)
            ORDER BY id
        `, [lotIds]);
        
        console.log(`üìö –ù–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑–µ: ${lotsResult.rows.length} –ª–æ—Ç–æ–≤`);
        
        lotsResult.rows.forEach((lot, index) => {
            console.log(`${index + 1}. –õ–æ—Ç ${lot.lot_number} (–∞—É–∫—Ü–∏–æ–Ω ${lot.auction_number}): ${lot.metal} ${lot.condition} ${lot.year}–≥.`);
            console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${lot.coin_description?.substring(0, 80)}...`);
            console.log(`   –í–µ—Å: ${lot.weight || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
            console.log('');
        });
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    } finally {
        await pool.end();
    }
}

checkWatchlist();
