#!/bin/bash

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–∞–±–ª–∏—Ü—ã watchlist –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ..."
echo "üìÖ –í—Ä–µ–º—è: $(date)"
echo ""

cd /var/www/wolmar-parser

echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã watchlist..."
node create-watchlist-table.js

echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç..."
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞
node -e "
const { Pool } = require('pg');
const config = require('./config');
const pool = new Pool(config.dbConfig);

async function checkTable() {
    try {
        const result = await pool.query(\`
            SELECT COUNT(*) as count 
            FROM information_schema.tables 
            WHERE table_name = 'watchlist'
        \`);
        
        if (result.rows[0].count > 0) {
            console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ watchlist —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
            const countResult = await pool.query('SELECT COUNT(*) as count FROM watchlist');
            console.log(\`üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ watchlist: \${countResult.rows[0].count}\`);
        } else {
            console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ watchlist –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
        
        process.exit(0);
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error.message);
        process.exit(1);
    }
}

checkTable();
"

echo ""
echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ watchlist –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
