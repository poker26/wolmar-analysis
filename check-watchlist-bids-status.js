const { Pool } = require('pg');
const config = require('./config');

async function checkWatchlistBidsStatus() {
    const pool = new Pool(config.dbConfig);
    
    try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∏—Å—Ç–æ—Ä–∏–∏ —Å—Ç–∞–≤–æ–∫ –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ª–æ—Ç—ã –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º
        const watchlistResult = await pool.query(`
            SELECT 
                w.user_id,
                al.id as lot_id,
                al.lot_number,
                al.auction_number,
                al.source_url,
                COUNT(lb.id) as bids_count
            FROM watchlist w
            JOIN auction_lots al ON w.lot_id = al.id
            LEFT JOIN lot_bids lb ON al.id = lb.lot_id
            GROUP BY w.user_id, al.id, al.lot_number, al.auction_number, al.source_url
            ORDER BY w.added_at DESC
        `);
        
        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${watchlistResult.rows.length} –ª–æ—Ç–æ–≤ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º:`);
        
        if (watchlistResult.rows.length === 0) {
            console.log('‚ùå –ù–µ—Ç –ª–æ—Ç–æ–≤ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º!');
            return;
        }
        
        watchlistResult.rows.forEach((lot, index) => {
            console.log(`   ${index + 1}. –õ–æ—Ç ${lot.lot_number} (ID: ${lot.lot_id}): ${lot.bids_count} —Å—Ç–∞–≤–æ–∫`);
            if (lot.source_url) {
                console.log(`      URL: ${lot.source_url}`);
            } else {
                console.log(`      ‚ùå –ù–µ—Ç URL –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞!`);
            }
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞–≤–æ–∫ –≤ –ë–î
        const totalBidsResult = await pool.query('SELECT COUNT(*) as count FROM lot_bids');
        console.log(`\nüìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞–≤–æ–∫ –≤ –ë–î: ${totalBidsResult.rows[0].count}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞–≤–∫–∏ –¥–ª—è –ª–æ—Ç–æ–≤ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
        const watchlistBidsResult = await pool.query(`
            SELECT COUNT(*) as count
            FROM lot_bids lb
            JOIN watchlist w ON lb.lot_id = w.lot_id
        `);
        console.log(`üìä –°—Ç–∞–≤–æ–∫ –¥–ª—è –ª–æ—Ç–æ–≤ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: ${watchlistBidsResult.rows[0].count}`);
        
        if (watchlistBidsResult.rows[0].count === '0') {
            console.log('\n‚ùå –ù–µ—Ç —Å—Ç–∞–≤–æ–∫ –¥–ª—è –ª–æ—Ç–æ–≤ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ!');
            console.log('üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
            console.log('   1. –°–∫—Ä–∏–ø—Ç update-watchlist-bids.js –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è');
            console.log('   2. –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å—Ç–∏–ª—Å—è, –Ω–æ –Ω–µ –Ω–∞—à–µ–ª —Å—Ç–∞–≤–∫–∏ –Ω–∞ Wolmar');
            console.log('   3. –û—à–∏–±–∫–∏ –≤ –ø–∞—Ä—Å–∏–Ω–≥–µ AJAX –¥–∞–Ω–Ω—ã—Ö');
            console.log('   4. –ü—Ä–æ–±–ª–µ–º—ã —Å —Ñ–æ—Ä–º–∞—Ç–æ–º –¥–∞–Ω–Ω—ã—Ö');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ª–æ—Ç—ã —Å URL –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞
            const lotsWithUrl = watchlistResult.rows.filter(lot => lot.source_url);
            console.log(`\nüìä –õ–æ—Ç–æ–≤ —Å URL –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞: ${lotsWithUrl.length}`);
            
            if (lotsWithUrl.length > 0) {
                console.log('üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç update-watchlist-bids.js –≤—Ä—É—á–Ω—É—é');
                console.log('   –ö–æ–º–∞–Ω–¥–∞: node update-watchlist-bids.js [USER_ID]');
            }
        } else {
            console.log('\n‚úÖ –ï—Å—Ç—å —Å—Ç–∞–≤–∫–∏ –¥–ª—è –ª–æ—Ç–æ–≤ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ!');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç–∞–≤–∫–∏
            const recentBids = await pool.query(`
                SELECT 
                    lb.lot_id,
                    lb.bid_amount,
                    lb.bidder_login,
                    lb.bid_timestamp,
                    lb.is_auto_bid,
                    al.lot_number
                FROM lot_bids lb
                JOIN auction_lots al ON lb.lot_id = al.id
                JOIN watchlist w ON lb.lot_id = w.lot_id
                ORDER BY lb.bid_timestamp DESC
                LIMIT 5
            `);
            
            console.log('üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç–∞–≤–æ–∫ –¥–ª—è –ª–æ—Ç–æ–≤ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:');
            recentBids.rows.forEach((bid, index) => {
                const autoBid = bid.is_auto_bid ? ' (–∞–≤—Ç–æ)' : '';
                console.log(`   ${index + 1}. –õ–æ—Ç ${bid.lot_number}: ${bid.bid_amount}‚ÇΩ –æ—Ç ${bid.bidder_login}${autoBid} (${bid.bid_timestamp})`);
            });
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:', error.message);
    } finally {
        await pool.end();
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
if (require.main === module) {
    checkWatchlistBidsStatus()
        .then(() => {
            console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
            process.exit(0);
        })
        .catch((error) => {
            console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
            process.exit(1);
        });
}

module.exports = checkWatchlistBidsStatus;
