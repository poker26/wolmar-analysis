#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏–∑–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
 */

const AuctionBehaviorAnalyzer = require('./auction-behavior-analyzer');
const DetailedBehaviorInvestigator = require('./detailed-behavior-investigator');
const AntiManipulationStrategies = require('./anti-manipulation-strategies');

class BehaviorAnalysisTester {
    constructor() {
        this.dbConfig = {
            user: 'postgres.xkwgspqwebfeteoblayu',
            host: 'aws-0-eu-north-1.pooler.supabase.com',
            database: 'postgres',
            password: 'Gopapopa326+',
            port: 6543,
            ssl: { rejectUnauthorized: false }
        };
        
        this.testResults = {
            databaseConnection: false,
            behaviorAnalyzer: false,
            detailedInvestigator: false,
            antiManipulationStrategies: false,
            overallStatus: 'UNKNOWN'
        };
    }

    async runAllTests() {
        console.log('üß™ –ó–ê–ü–£–°–ö –¢–ï–°–¢–û–í –°–ò–°–¢–ï–ú–´ –ê–ù–ê–õ–ò–ó–ê –ü–û–í–ï–î–ï–ù–ò–Ø');
        console.log('==========================================\n');

        try {
            // –¢–µ—Å—Ç 1: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            await this.testDatabaseConnection();
            
            // –¢–µ—Å—Ç 2: –û—Å–Ω–æ–≤–Ω–æ–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ø–æ–≤–µ–¥–µ–Ω–∏—è
            await this.testBehaviorAnalyzer();
            
            // –¢–µ—Å—Ç 3: –î–µ—Ç–∞–ª—å–Ω—ã–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å
            await this.testDetailedInvestigator();
            
            // –¢–µ—Å—Ç 4: –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø—Ä–æ—Ç–∏–≤–æ–¥–µ–π—Å—Ç–≤–∏—è
            await this.testAntiManipulationStrategies();
            
            // –¢–µ—Å—Ç 5: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
            await this.testIntegration();
            
            // –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            this.displayTestResults();
            
        } catch (error) {
            console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
            this.testResults.overallStatus = 'FAILED';
        }
    }

    async testDatabaseConnection() {
        console.log('üîå –¢–µ—Å—Ç 1: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
        console.log('=====================================');
        
        try {
            const analyzer = new AuctionBehaviorAnalyzer(this.dbConfig);
            await analyzer.init();
            await analyzer.close();
            
            this.testResults.databaseConnection = true;
            console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: –£–°–ü–ï–®–ù–û\n');
            
        } catch (error) {
            console.log('‚ùå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: –û–®–ò–ë–ö–ê');
            console.log(`   –ü—Ä–∏—á–∏–Ω–∞: ${error.message}\n`);
        }
    }

    async testBehaviorAnalyzer() {
        console.log('üîç –¢–µ—Å—Ç 2: –û—Å–Ω–æ–≤–Ω–æ–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ø–æ–≤–µ–¥–µ–Ω–∏—è');
        console.log('=========================================');
        
        try {
            const analyzer = new AuctionBehaviorAnalyzer(this.dbConfig);
            await analyzer.init();
            
            // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –º–µ—Ç–æ–¥ –∞–Ω–∞–ª–∏–∑–∞
            console.log('   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–¥–∞–≤—Ü–æ–≤...');
            const suspiciousSellers = await analyzer.analyzeSuspiciousSellers();
            console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${suspiciousSellers.length} –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–¥–∞–≤—Ü–æ–≤`);
            
            console.log('   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–π —Å —Ü–µ–Ω–∞–º–∏...');
            const priceManipulation = await analyzer.analyzePriceManipulation();
            console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${priceManipulation.length} —Å–ª—É—á–∞–µ–≤ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–π —Å —Ü–µ–Ω–∞–º–∏`);
            
            console.log('   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤...');
            const multipleAccounts = await analyzer.analyzeMultipleAccounts();
            console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${multipleAccounts.length} –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä –∞–∫–∫–∞—É–Ω—Ç–æ–≤`);
            
            console.log('   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ —Ç–∞–∫—Ç–∏–∫–∏ "–ø—Ä–∏–º–∞–Ω–∫–∏"...');
            const baitingTactics = await analyzer.analyzeBaitingTactics();
            console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${baitingTactics.length} —Å–ª—É—á–∞–µ–≤ —Ç–∞–∫—Ç–∏–∫–∏ "–ø—Ä–∏–º–∞–Ω–∫–∏"`);
            
            console.log('   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫...');
            const repeatedPurchases = await analyzer.analyzeRepeatedPurchases();
            console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${repeatedPurchases.length} —Å–ª—É—á–∞–µ–≤ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫`);
            
            await analyzer.close();
            
            this.testResults.behaviorAnalyzer = true;
            console.log('‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ø–æ–≤–µ–¥–µ–Ω–∏—è: –£–°–ü–ï–®–ù–û\n');
            
        } catch (error) {
            console.log('‚ùå –û—Å–Ω–æ–≤–Ω–æ–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ø–æ–≤–µ–¥–µ–Ω–∏—è: –û–®–ò–ë–ö–ê');
            console.log(`   –ü—Ä–∏—á–∏–Ω–∞: ${error.message}\n`);
        }
    }

    async testDetailedInvestigator() {
        console.log('üî¨ –¢–µ—Å—Ç 3: –î–µ—Ç–∞–ª—å–Ω—ã–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å');
        console.log('===================================');
        
        try {
            const investigator = new DetailedBehaviorInvestigator(this.dbConfig);
            await investigator.init();
            
            console.log('   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤...');
            const syncPatterns = await investigator.findSynchronousBiddingPatterns();
            console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${syncPatterns.length} —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤`);
            
            console.log('   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –º–µ—Ä—Ç–≤—ã—Ö –ª–æ—Ç–æ–≤...');
            const deadLots = await investigator.analyzeDeadLots();
            console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${deadLots.length} –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ —Å –º–µ—Ä—Ç–≤—ã–º–∏ –ª–æ—Ç–∞–º–∏`);
            
            await investigator.close();
            
            this.testResults.detailedInvestigator = true;
            console.log('‚úÖ –î–µ—Ç–∞–ª—å–Ω—ã–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å: –£–°–ü–ï–®–ù–û\n');
            
        } catch (error) {
            console.log('‚ùå –î–µ—Ç–∞–ª—å–Ω—ã–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å: –û–®–ò–ë–ö–ê');
            console.log(`   –ü—Ä–∏—á–∏–Ω–∞: ${error.message}\n`);
        }
    }

    async testAntiManipulationStrategies() {
        console.log('üõ°Ô∏è –¢–µ—Å—Ç 4: –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø—Ä–æ—Ç–∏–≤–æ–¥–µ–π—Å—Ç–≤–∏—è');
        console.log('=====================================');
        
        try {
            const strategies = new AntiManipulationStrategies();
            
            console.log('   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –¥–µ—Ç–µ–∫—Ü–∏–∏...');
            strategies.generateDetectionStrategies();
            console.log(`   ‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ ${strategies.strategies.detection.length} —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –¥–µ—Ç–µ–∫—Ü–∏–∏`);
            
            console.log('   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è...');
            strategies.generatePreventionStrategies();
            console.log(`   ‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ ${strategies.strategies.prevention.length} —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è`);
            
            console.log('   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –ø—Ä–∏–Ω—É–∂–¥–µ–Ω–∏—è...');
            strategies.generateEnforcementStrategies();
            console.log(`   ‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ ${strategies.strategies.enforcement.length} —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –ø—Ä–∏–Ω—É–∂–¥–µ–Ω–∏—è`);
            
            console.log('   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...');
            strategies.generateMonitoringStrategies();
            console.log(`   ‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ ${strategies.strategies.monitoring.length} —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞`);
            
            console.log('   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–ª–Ω–æ–≥–æ –ø–ª–∞–Ω–∞...');
            const plan = await strategies.generateFullPlan();
            console.log(`   ‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –ø–æ–ª–Ω—ã–π –ø–ª–∞–Ω —Å ${plan.summary.totalStrategies} —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º–∏`);
            
            this.testResults.antiManipulationStrategies = true;
            console.log('‚úÖ –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø—Ä–æ—Ç–∏–≤–æ–¥–µ–π—Å—Ç–≤–∏—è: –£–°–ü–ï–®–ù–û\n');
            
        } catch (error) {
            console.log('‚ùå –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø—Ä–æ—Ç–∏–≤–æ–¥–µ–π—Å—Ç–≤–∏—è: –û–®–ò–ë–ö–ê');
            console.log(`   –ü—Ä–∏—á–∏–Ω–∞: ${error.message}\n`);
        }
    }

    async testIntegration() {
        console.log('üîó –¢–µ—Å—Ç 5: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã');
        console.log('===============================');
        
        try {
            // –¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
            console.log('   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...');
            const analyzer = new AuctionBehaviorAnalyzer(this.dbConfig);
            await analyzer.init();
            const fullResults = await analyzer.generateComprehensiveReport();
            await analyzer.close();
            
            console.log(`   ‚úÖ –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω: ${fullResults.summary.totalSuspiciousSellers} –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–¥–∞–≤—Ü–æ–≤`);
            
            // –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞
            console.log('   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞...');
            const investigator = new DetailedBehaviorInvestigator(this.dbConfig);
            await investigator.init();
            
            // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–¥–∞–≤—Ü—ã, —Ç–µ—Å—Ç–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
            if (fullResults.suspiciousSellers.length > 0) {
                const testSeller = fullResults.suspiciousSellers[0].winner_nick;
                console.log(`   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞: ${testSeller}`);
                const detailedReport = await investigator.generateDetailedReport(testSeller, 'seller');
                console.log(`   ‚úÖ –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –¥–ª—è ${testSeller}`);
            }
            
            await investigator.close();
            
            console.log('‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã: –£–°–ü–ï–®–ù–û\n');
            
        } catch (error) {
            console.log('‚ùå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã: –û–®–ò–ë–ö–ê');
            console.log(`   –ü—Ä–∏—á–∏–Ω–∞: ${error.message}\n`);
        }
    }

    displayTestResults() {
        console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø');
        console.log('===========================');
        
        const tests = [
            { name: '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö', result: this.testResults.databaseConnection },
            { name: '–û—Å–Ω–æ–≤–Ω–æ–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ø–æ–≤–µ–¥–µ–Ω–∏—è', result: this.testResults.behaviorAnalyzer },
            { name: '–î–µ—Ç–∞–ª—å–Ω—ã–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å', result: this.testResults.detailedInvestigator },
            { name: '–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø—Ä–æ—Ç–∏–≤–æ–¥–µ–π—Å—Ç–≤–∏—è', result: this.testResults.antiManipulationStrategies }
        ];
        
        let passedTests = 0;
        
        tests.forEach(test => {
            const status = test.result ? '‚úÖ –ü–†–û–ô–î–ï–ù' : '‚ùå –ü–†–û–í–ê–õ–ï–ù';
            console.log(`${status} ${test.name}`);
            if (test.result) passedTests++;
        });
        
        console.log(`\nüìà –ò–¢–û–ì–û: ${passedTests}/${tests.length} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ`);
        
        if (passedTests === tests.length) {
            this.testResults.overallStatus = 'PASSED';
            console.log('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!');
            console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é');
        } else {
            this.testResults.overallStatus = 'FAILED';
            console.log('‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ï–ù–´');
            console.log('‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º');
        }
        
        // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
        if (this.testResults.overallStatus === 'PASSED') {
            console.log('1. –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–µ–∫—Ç');
            console.log('2. –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑: node run-auction-analysis.js');
            console.log('3. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏');
        } else {
            console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
            console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã auction_lots');
            console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
        }
    }

    async runQuickTest() {
        console.log('‚ö° –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´');
        console.log('=======================\n');
        
        try {
            const analyzer = new AuctionBehaviorAnalyzer(this.dbConfig);
            await analyzer.init();
            
            console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...');
            const results = await analyzer.generateComprehensiveReport();
            
            console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ë–´–°–¢–†–û–ì–û –¢–ï–°–¢–ê:');
            console.log('==============================');
            console.log(`‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î: –†–ê–ë–û–¢–ê–ï–¢`);
            console.log(`‚úÖ –ê–Ω–∞–ª–∏–∑ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–¥–∞–≤—Ü–æ–≤: ${results.summary.totalSuspiciousSellers}`);
            console.log(`‚úÖ –ê–Ω–∞–ª–∏–∑ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–π —Å —Ü–µ–Ω–∞–º–∏: ${results.summary.totalPriceManipulators}`);
            console.log(`‚úÖ –ê–Ω–∞–ª–∏–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤: ${results.summary.totalMultipleAccounts}`);
            console.log(`‚úÖ –ê–Ω–∞–ª–∏–∑ —Ç–∞–∫—Ç–∏–∫–∏ "–ø—Ä–∏–º–∞–Ω–∫–∏": ${results.summary.totalBaitingCases}`);
            console.log(`‚úÖ –ê–Ω–∞–ª–∏–∑ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫: ${results.summary.totalRepeatedPurchases}`);
            
            await analyzer.close();
            
            console.log('\nüéâ –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù –£–°–ü–ï–®–ù–û!');
            
        } catch (error) {
            console.log('‚ùå –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –ü–†–û–í–ê–õ–ï–ù');
            console.log(`–ü—Ä–∏—á–∏–Ω–∞: ${error.message}`);
        }
    }
}

// CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
if (require.main === module) {
    const args = process.argv.slice(2);
    const tester = new BehaviorAnalysisTester();

    async function main() {
        if (args.includes('--quick') || args.includes('-q')) {
            await tester.runQuickTest();
        } else if (args.includes('--help') || args.includes('-h')) {
            console.log(`
üß™ –¢–µ—Å—Ç–µ—Ä —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏–∑–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
  node test-behavior-analysis.js [–æ–ø—Ü–∏–∏]

–û–ø—Ü–∏–∏:
  --quick, -q     –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç (—Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã)
  --full, -f      –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
  --help, -h      –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã:
  node test-behavior-analysis.js              # –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç
  node test-behavior-analysis.js --quick      # –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç
  node test-behavior-analysis.js --help       # –°–ø—Ä–∞–≤–∫–∞
            `);
        } else {
            await tester.runAllTests();
        }
    }

    main().catch(error => {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
        process.exit(1);
    });
}

module.exports = BehaviorAnalysisTester;
