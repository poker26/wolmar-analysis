const { Pool } = require('pg');
const config = require('./config');

const pool = new Pool(config.dbConfig);

async function checkLot() {
    try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ—Ç 147377 –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
        
        const lotQuery = `
            SELECT id, parsing_number, auction_number, lot_number, coin_description
            FROM auction_lots 
            WHERE id = $1
        `;
        
        const result = await pool.query(lotQuery, [147377]);
        
        if (result.rows.length === 0) {
            console.log('‚ùå –õ–æ—Ç 147377 –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
            
            // –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –ª–æ—Ç—ã —Å –ø–æ—Ö–æ–∂–∏–º–∏ ID
            const similarQuery = `
                SELECT id, parsing_number, auction_number, lot_number
                FROM auction_lots 
                WHERE id BETWEEN 147370 AND 147380
                ORDER BY id
            `;
            const similarResult = await pool.query(similarQuery);
            console.log('üîç –ü–æ—Ö–æ–∂–∏–µ –ª–æ—Ç—ã:', similarResult.rows);
            
        } else {
            const lot = result.rows[0];
            console.log('‚úÖ –õ–æ—Ç –Ω–∞–π–¥–µ–Ω:');
            console.log(`   ID: ${lot.id}`);
            console.log(`   parsing_number: ${lot.parsing_number} (—Ç–∏–ø: ${typeof lot.parsing_number})`);
            console.log(`   auction_number: ${lot.auction_number} (—Ç–∏–ø: ${typeof lot.auction_number})`);
            console.log(`   lot_number: ${lot.lot_number}`);
            console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${lot.coin_description ? lot.coin_description.substring(0, 100) + '...' : '–ù–µ—Ç'}`);
            
            if (!lot.parsing_number) {
                console.log('‚ö†Ô∏è –£ –ª–æ—Ç–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç parsing_number!');
            }
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ—Ç–∞:', error);
    } finally {
        await pool.end();
    }
}

checkLot();
