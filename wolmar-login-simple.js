const { launchPuppeteer, createPage, cleanupChromeTempFiles } = require('./puppeteer-utils');
const fs = require('fs');

class WolmarLoginSimple {
    constructor() {
        this.browser = null;
        this.page = null;
        this.credentials = {
            username: 'hippo26',
            password: 'Gopapopa326'
        };
    }

    async init() {
        console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä...');
        this.browser = await launchPuppeteer();
        this.page = await createPage(this.browser);
        
        await this.page.setViewport({ width: 1280, height: 720 });
        console.log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    async login() {
        try {
            console.log('üîç –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É Wolmar...');
            await this.page.goto('https://www.wolmar.ru/', {
                waitUntil: 'networkidle2',
                timeout: 30000
            });

            // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            await new Promise(resolve => setTimeout(resolve, 3000));

            // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
            await this.page.screenshot({ path: 'wolmar-homepage.png', fullPage: true });
            console.log('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: wolmar-homepage.png');

            console.log('üîç –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è"...');
            
            // –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è" –ø–æ —Ç–µ–∫—Å—Ç—É
            const loginButton = await this.page.evaluateHandle(() => {
                const links = document.querySelectorAll('a');
                for (let link of links) {
                    if (link.textContent.includes('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è')) {
                        return link;
                    }
                }
                return null;
            });
            
            if (!loginButton || await loginButton.evaluate(el => el === null)) {
                console.log('‚ùå –ö–Ω–æ–ø–∫–∞ "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                await this.page.screenshot({ path: 'wolmar-no-auth-button.png', fullPage: true });
                return false;
            }

            console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è" –Ω–∞–π–¥–µ–Ω–∞');
            console.log('üñ±Ô∏è –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è"...');
            await loginButton.click();

            // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ä–º—ã
            await new Promise(resolve => setTimeout(resolve, 3000));

            // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞
            await this.page.screenshot({ path: 'wolmar-login-form.png', fullPage: true });
            console.log('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞: wolmar-login-form.png');

            console.log('üîç –ò—â–µ–º –ø–æ–ª—è —Ñ–æ—Ä–º—ã...');
            
            // –ò—â–µ–º –ø–æ–ª—è –ø–æ —Ç–æ—á–Ω—ã–º —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º –∏–∑ –∫–æ–¥–∞ —Ñ–æ—Ä–º—ã
            const usernameField = await this.page.$('input[name="login"]');
            const passwordField = await this.page.$('input[name="password"]');
            
            if (!usernameField) {
                console.log('‚ùå –ü–æ–ª–µ –ª–æ–≥–∏–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
                await this.page.screenshot({ path: 'wolmar-no-username-field.png', fullPage: true });
                return false;
            }
            
            if (!passwordField) {
                console.log('‚ùå –ü–æ–ª–µ –ø–∞—Ä–æ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
                await this.page.screenshot({ path: 'wolmar-no-password-field.png', fullPage: true });
                return false;
            }

            console.log('‚úÖ –ü–æ–ª—è —Ñ–æ—Ä–º—ã –Ω–∞–π–¥–µ–Ω—ã');
            console.log('üìù –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É...');
            
            await usernameField.type(this.credentials.username);
            await passwordField.type(this.credentials.password);

            console.log('üîç –ò—â–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏...');
            
            // –ò—â–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ (input type="image")
            const submitButton = await this.page.$('input[type="image"]');
            
            if (!submitButton) {
                console.log('‚ùå –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                await this.page.screenshot({ path: 'wolmar-no-submit-button.png', fullPage: true });
                return false;
            }

            console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–π–¥–µ–Ω–∞');
            console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É...');
            await submitButton.click();

            // –ñ–¥–µ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏
            await new Promise(resolve => setTimeout(resolve, 5000));

            console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –≤—Ö–æ–¥–∞
            const pageContent = await this.page.content();
            const successIndicators = [
                '–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç',
                '–õ–æ—Ç—ã —Ç–µ–∫—É—â–µ–≥–æ –∞—É–∫—Ü–∏–æ–Ω–∞',
                '–ò—Å—Ç–æ—Ä–∏—è –≤—ã–∏–≥—Ä—ã—à–µ–π',
                '–í—ã—Ö–æ–¥'
            ];

            const isLoggedIn = successIndicators.some(indicator => pageContent.includes(indicator));

            if (isLoggedIn) {
                console.log('‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω!');
                await this.page.screenshot({ path: 'wolmar-logged-in.png', fullPage: true });
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º cookies
                const cookies = await this.page.cookies();
                fs.writeFileSync('wolmar-cookies.json', JSON.stringify(cookies, null, 2));
                console.log('üç™ Cookies —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
                return true;
            } else {
                console.log('‚ùå –í—Ö–æ–¥ –Ω–µ —É–¥–∞–ª—Å—è');
                await this.page.screenshot({ path: 'wolmar-login-failed.png', fullPage: true });
                return false;
            }

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
            await this.page.screenshot({ path: 'wolmar-error.png', fullPage: true });
            return false;
        }
    }

    async close() {
        if (this.browser) {
            await this.browser.close();
            console.log('üîí –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç');
        }
        cleanupChromeTempFiles();
    }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
    const login = new WolmarLoginSimple();
    
    try {
        await login.init();
        const success = await login.login();
        
        if (success) {
            console.log('üéâ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
        } else {
            console.log('‚ùå –í—Ö–æ–¥ –Ω–µ —É–¥–∞–ª—Å—è');
        }
        
    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    } finally {
        await login.close();
    }
}

main().catch(console.error);
