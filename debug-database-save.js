const WolmarCategoryParser = require('./wolmar-category-parser');
const config = require('./config');
const { Pool } = require('pg');

async function debugDatabaseSave() {
    console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–û–•–†–ê–ù–ï–ù–ò–Ø –í –ë–î');
    console.log('================================');
    
    const pool = new Pool(config.dbConfig);
    const parser = new WolmarCategoryParser(config.dbConfig, 'debug', 2070);
    
    try {
        console.log('\n1Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä...');
        await parser.init();
        
        console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ—Ç–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ë–æ–Ω—ã" –¥–ª—è –∞—É–∫—Ü–∏–æ–Ω–∞ 2070...');
        const result = await pool.query(`
            SELECT COUNT(*) as count 
            FROM auction_lots 
            WHERE auction_number = '2070' AND category = '–ë–æ–Ω—ã'
        `);
        console.log(`üìä –õ–æ—Ç–æ–≤ –≤ –ë–î –¥–ª—è –∞—É–∫—Ü–∏–æ–Ω–∞ 2070, –∫–∞—Ç–µ–≥–æ—Ä–∏—è "–ë–æ–Ω—ã": ${result.rows[0].count}`);
        
        console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –ª–æ—Ç—ã...');
        const recentLots = await pool.query(`
            SELECT lot_number, category, coin_description, created_at
            FROM auction_lots 
            WHERE auction_number = '2070'
            ORDER BY created_at DESC 
            LIMIT 10
        `);
        console.log('üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –ª–æ—Ç–æ–≤ –≤ –ë–î:');
        recentLots.rows.forEach((lot, index) => {
            console.log(`   ${index + 1}. –õ–æ—Ç ${lot.lot_number} | ${lot.category} | ${lot.coin_description?.substring(0, 50)}...`);
        });
        
        console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –∞—É–∫—Ü–∏–æ–Ω–∞ 2070...');
        const categories = await pool.query(`
            SELECT category, COUNT(*) as count
            FROM auction_lots 
            WHERE auction_number = '2070'
            GROUP BY category
            ORDER BY count DESC
        `);
        console.log('üìä –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –ë–î –¥–ª—è –∞—É–∫—Ü–∏–æ–Ω–∞ 2070:');
        categories.rows.forEach(cat => {
            console.log(`   ${cat.category}: ${cat.count} –ª–æ—Ç–æ–≤`);
        });
        
        console.log('\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ª–æ—Ç–∞...');
        const testLotData = {
            auctionNumber: '2070',
            lotNumber: 'TEST_DEBUG',
            coinDescription: '–¢–µ—Å—Ç–æ–≤—ã–π –ª–æ—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏',
            images: ['https://example.com/test.jpg'],
            winningBid: '1000',
            winnerLogin: 'test_user',
            bidsCount: '1',
            lotStatus: 'closed',
            year: '2025',
            letters: '–¢–ï–°–¢',
            metal: 'Au',
            condition: 'UNC',
            sourceUrl: 'https://test.com',
            sourceCategory: '–ë–æ–Ω—ã',
            parsingMethod: 'debug_test',
            aversImageUrl: 'https://example.com/test.jpg',
            reversImageUrl: 'https://example.com/test2.jpg',
            category: '–ë–æ–Ω—ã',
            categoryConfidence: 1
        };
        
        console.log('üíæ –ü—ã—Ç–∞–µ–º—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –ª–æ—Ç...');
        try {
            await parser.saveLotToDatabase(testLotData);
            console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ª–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ª–æ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è
            const testResult = await pool.query(`
                SELECT * FROM auction_lots 
                WHERE auction_number = '2070' AND lot_number = 'TEST_DEBUG'
            `);
            
            if (testResult.rows.length > 0) {
                console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ª–æ—Ç –Ω–∞–π–¥–µ–Ω –≤ –ë–î');
                console.log(`   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${testResult.rows[0].category}`);
                console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${testResult.rows[0].coin_description}`);
            } else {
                console.log('‚ùå –¢–µ—Å—Ç–æ–≤—ã–π –ª–æ—Ç –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –ë–î');
            }
            
            // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ª–æ—Ç
            await pool.query(`
                DELETE FROM auction_lots 
                WHERE auction_number = '2070' AND lot_number = 'TEST_DEBUG'
            `);
            console.log('üóëÔ∏è –¢–µ—Å—Ç–æ–≤—ã–π –ª–æ—Ç —É–¥–∞–ª–µ–Ω');
            
        } catch (saveError) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ª–æ—Ç–∞:', saveError.message);
            console.error('‚ùå –°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', saveError.stack);
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error.message);
        console.error('‚ùå –°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error.stack);
    } finally {
        if (parser.browser) {
            await parser.browser.close();
        }
        if (parser.dbClient) {
            await parser.dbClient.end();
        }
        await pool.end();
    }
}

if (require.main === module) {
    debugDatabaseSave();
}
