const { Pool } = require('pg');
const config = require('./config');

async function checkSnCoins() {
    const pool = new Pool(config.database);
    
    try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–æ–Ω–µ—Ç —Å –º–µ—Ç–∞–ª–ª–æ–º Sn...');
        
        // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –≤–æ–æ–±—â–µ –∑–∞–ø–∏—Å–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ
        const countQuery = 'SELECT COUNT(*) as total FROM coin_catalog';
        const countResult = await pool.query(countQuery);
        console.log(`üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ –∫–∞—Ç–∞–ª–æ–≥–µ: ${countResult.rows[0].total}`);
        
        // –ü—Ä–æ–≤–µ—Ä–∏–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –º–µ—Ç–∞–ª–ª—ã
        const metalsQuery = 'SELECT DISTINCT metal FROM coin_catalog WHERE metal IS NOT NULL ORDER BY metal';
        const metalsResult = await pool.query(metalsQuery);
        console.log('\nüîç –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –º–µ—Ç–∞–ª–ª—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ:');
        metalsResult.rows.forEach((row, index) => {
            console.log(`${index + 1}. ${row.metal}`);
        });
        
        // –ü—Ä–æ–≤–µ—Ä–∏–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ Sn
        const snQuery = 'SELECT COUNT(*) as count FROM coin_catalog WHERE metal = $1';
        const snResult = await pool.query(snQuery, ['Sn']);
        console.log(`\nüìä –ú–æ–Ω–µ—Ç —Å –º–µ—Ç–∞–ª–ª–æ–º Sn: ${snResult.rows[0].count}`);
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å, –ø–æ–∫–∞–∂–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤
        if (snResult.rows[0].count > 0) {
            const examplesQuery = `
                SELECT id, denomination, coin_name, year, metal, mint, condition
                FROM coin_catalog 
                WHERE metal = 'Sn'
                LIMIT 5
            `;
            const examplesResult = await pool.query(examplesQuery);
            console.log('\nüìã –ü—Ä–∏–º–µ—Ä—ã –º–æ–Ω–µ—Ç Sn:');
            examplesResult.rows.forEach((coin, index) => {
                console.log(`${index + 1}. ID: ${coin.id} | ${coin.denomination} ${coin.coin_name} | ${coin.year || '–±–µ–∑ –≥–æ–¥–∞'} | ${coin.mint || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –¥–≤–æ—Ä'}`);
            });
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
        console.error('Stack:', error.stack);
    } finally {
        await pool.end();
    }
}

checkSnCoins();
