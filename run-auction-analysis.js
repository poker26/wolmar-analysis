#!/usr/bin/env node

/**
 * –ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω–µ
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–∏–ø–æ—Ç–µ–∑—ã –ê–Ω–∞—Ç–æ–ª–∏—è QGL –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–ª–∞–Ω –ø—Ä–æ—Ç–∏–≤–æ–¥–µ–π—Å—Ç–≤–∏—è
 */

const AuctionBehaviorAnalyzer = require('./auction-behavior-analyzer');
const DetailedBehaviorInvestigator = require('./detailed-behavior-investigator');
const AntiManipulationStrategies = require('./anti-manipulation-strategies');
const fs = require('fs').promises;

class AuctionAnalysisRunner {
    constructor() {
        this.dbConfig = {
            user: 'postgres.xkwgspqwebfeteoblayu',
            host: 'aws-0-eu-north-1.pooler.supabase.com',
            database: 'postgres',
            password: 'Gopapopa326+',
            port: 6543,
            ssl: { rejectUnauthorized: false }
        };
        
        this.results = {
            behaviorAnalysis: null,
            detailedInvestigation: null,
            antiManipulationPlan: null,
            summary: null
        };
    }

    async runFullAnalysis() {
        console.log('üöÄ –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ì–û –ê–ù–ê–õ–ò–ó–ê –ü–û–í–ï–î–ï–ù–ò–Ø –ù–ê –ê–£–ö–¶–ò–û–ù–ï');
        console.log('================================================');
        console.log('üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–∏–ø–æ—Ç–µ–∑—ã –ê–Ω–∞—Ç–æ–ª–∏—è QGL –æ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏—è—Ö –ø—Ä–æ–¥–∞–≤—Ü–æ–≤\n');

        try {
            // –≠—Ç–∞–ø 1: –û—Å–Ω–æ–≤–Ω–æ–π –∞–Ω–∞–ª–∏–∑ –ø–æ–≤–µ–¥–µ–Ω–∏—è
            console.log('üîç –≠–¢–ê–ü 1: –ê–Ω–∞–ª–∏–∑ –ø–æ–≤–µ–¥–µ–Ω–∏—è –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω–µ');
            console.log('=====================================');
            const analyzer = new AuctionBehaviorAnalyzer(this.dbConfig);
            await analyzer.init();
            this.results.behaviorAnalysis = await analyzer.generateComprehensiveReport();
            await analyzer.close();

            // –≠—Ç–∞–ø 2: –î–µ—Ç–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
            console.log('\nüî¨ –≠–¢–ê–ü 2: –î–µ—Ç–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ');
            console.log('=================================');
            const investigator = new DetailedBehaviorInvestigator(this.dbConfig);
            await investigator.init();
            
            // –ê–Ω–∞–ª–∏–∑ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
            const syncPatterns = await investigator.findSynchronousBiddingPatterns();
            const deadLots = await investigator.analyzeDeadLots();
            
            this.results.detailedInvestigation = {
                synchronousPatterns: syncPatterns,
                deadLots: deadLots,
                timestamp: new Date().toISOString()
            };
            
            await investigator.close();

            // –≠—Ç–∞–ø 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–ª–∞–Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–¥–µ–π—Å—Ç–≤–∏—è
            console.log('\nüõ°Ô∏è –≠–¢–ê–ü 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–ª–∞–Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–¥–µ–π—Å—Ç–≤–∏—è');
            console.log('=========================================');
            const strategies = new AntiManipulationStrategies();
            this.results.antiManipulationPlan = await strategies.generateFullPlan();

            // –≠—Ç–∞–ø 4: –°–æ–∑–¥–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞
            await this.generateFinalReport();

            // –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            this.displayResults();

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞:', error.message);
            console.error(error.stack);
        }
    }

    async generateFinalReport() {
        console.log('\nüìã –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞...');
        
        const finalReport = {
            title: '–ê–Ω–∞–ª–∏–∑ –ø–æ–≤–µ–¥–µ–Ω–∏—è –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω–µ Wolmar - –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–∏–ø–æ—Ç–µ–∑ –ê–Ω–∞—Ç–æ–ª–∏—è QGL',
            generatedAt: new Date().toISOString(),
            hypotheses: {
                priceManipulation: {
                    status: this.results.behaviorAnalysis?.summary?.hypotheses?.priceManipulation || 'UNKNOWN',
                    evidence: this.results.behaviorAnalysis?.priceManipulation?.length || 0,
                    description: '–ü—Ä–æ–¥–∞–≤—Ü—ã —Ä–∞–∑–≥–æ–Ω—è—é—Ç —Ü–µ–Ω—ã —Å –ø–æ–º–æ—â—å—é —Ñ–µ–π–∫–æ–≤—ã—Ö —Å—Ç–∞–≤–æ–∫'
                },
                multipleAccounts: {
                    status: this.results.behaviorAnalysis?.summary?.hypotheses?.multipleAccounts || 'UNKNOWN',
                    evidence: this.results.behaviorAnalysis?.multipleAccounts?.length || 0,
                    description: '–û–¥–∏–Ω –ø—Ä–æ–¥–∞–≤–µ—Ü –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤'
                },
                baitingTactics: {
                    status: this.results.behaviorAnalysis?.summary?.hypotheses?.baitingTactics || 'UNKNOWN',
                    evidence: this.results.behaviorAnalysis?.baitingTactics?.filter(b => b.baiting_level !== 'NORMAL').length || 0,
                    description: '–ü—Ä–æ–¥–∞–≤—Ü—ã –¥–µ—Ä–∂–∞—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π –Ω–∞ –¥–µ—à–µ–≤—ã—Ö —Å—Ç–∞–≤–∫–∞—Ö, –Ω–∞–∫—Ä—É—á–∏–≤–∞—è –æ—Å—Ç–∞–ª—å–Ω—ã–µ'
                },
                repeatedPurchases: {
                    status: this.results.behaviorAnalysis?.summary?.hypotheses?.repeatedPurchases || 'UNKNOWN',
                    evidence: this.results.behaviorAnalysis?.repeatedPurchases?.filter(r => r.repetition_level !== 'NORMAL').length || 0,
                    description: '–ü—Ä–æ–¥–∞–≤—Ü—ã –ø–æ–∫—É–ø–∞—é—Ç –æ–¥–Ω–∏ –∏ —Ç–µ –∂–µ –º–æ–Ω–µ—Ç—ã –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ'
                }
            },
            keyFindings: this.generateKeyFindings(),
            recommendations: this.generateFinalRecommendations(),
            technicalImplementation: this.results.antiManipulationPlan?.implementationPlan || null,
            data: {
                behaviorAnalysis: this.results.behaviorAnalysis,
                detailedInvestigation: this.results.detailedInvestigation,
                antiManipulationPlan: this.results.antiManipulationPlan
            }
        };

        this.results.summary = finalReport;

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
        const filename = `final-auction-analysis-report-${new Date().toISOString().split('T')[0]}.json`;
        await fs.writeFile(filename, JSON.stringify(finalReport, null, 2));
        console.log(`üíæ –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${filename}`);

        return finalReport;
    }

    generateKeyFindings() {
        const findings = [];
        
        if (this.results.behaviorAnalysis) {
            const summary = this.results.behaviorAnalysis.summary;
            
            if (summary.totalSuspiciousSellers > 0) {
                findings.push(`üîç –ù–∞–π–¥–µ–Ω–æ ${summary.totalSuspiciousSellers} –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ —Å –∞–Ω–æ–º–∞–ª—å–Ω—ã–º–∏ –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º–∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è`);
            }
            
            if (summary.totalPriceManipulators > 0) {
                findings.push(`üí∞ –í—ã—è–≤–ª–µ–Ω–æ ${summary.totalPriceManipulators} —Å–ª—É—á–∞–µ–≤ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–π —Å —Ü–µ–Ω–∞–º–∏`);
            }
            
            if (summary.totalMultipleAccounts > 0) {
                findings.push(`üë• –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ ${summary.totalMultipleAccounts} –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä –∞–∫–∫–∞—É–Ω—Ç–æ–≤`);
            }
            
            if (summary.totalBaitingCases > 0) {
                findings.push(`üé£ –ù–∞–π–¥–µ–Ω–æ ${summary.totalBaitingCases} —Å–ª—É—á–∞–µ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç–∞–∫—Ç–∏–∫–∏ "–ø—Ä–∏–º–∞–Ω–∫–∏"`);
            }
            
            if (summary.totalRepeatedPurchases > 0) {
                findings.push(`üîÑ –í—ã—è–≤–ª–µ–Ω–æ ${summary.totalRepeatedPurchases} —Å–ª—É—á–∞–µ–≤ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫ –æ–¥–Ω–∏—Ö –∏ —Ç–µ—Ö –∂–µ –ª–æ—Ç–æ–≤`);
            }
        }

        if (this.results.detailedInvestigation) {
            if (this.results.detailedInvestigation.synchronousPatterns.length > 0) {
                findings.push(`‚è∞ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ ${this.results.detailedInvestigation.synchronousPatterns.length} —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ —Å—Ç–∞–≤–æ–∫`);
            }
            
            if (this.results.detailedInvestigation.deadLots.length > 0) {
                findings.push(`üíÄ –ù–∞–π–¥–µ–Ω–æ ${this.results.detailedInvestigation.deadLots.length} –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ —Å –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º "–º–µ—Ä—Ç–≤—ã—Ö" –ª–æ—Ç–æ–≤`);
            }
        }

        return findings;
    }

    generateFinalRecommendations() {
        const recommendations = {
            immediate: [
                '–í–Ω–µ–¥—Ä–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏',
                '–°–æ–∑–¥–∞—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –¥–µ—Ç–µ–∫—Ü–∏–∏ —Ñ–µ–π–∫–æ–≤—ã—Ö —Å—Ç–∞–≤–æ–∫',
                '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –∞–ª–µ—Ä—Ç–æ–≤ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤',
                '–í–Ω–µ–¥—Ä–∏—Ç—å –±–∞–∑–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
            ],
            shortTerm: [
                '–†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –∏ –≤–Ω–µ–¥—Ä–∏—Ç—å ML-–º–æ–¥–µ–ª–∏ –¥–ª—è –¥–µ—Ç–µ–∫—Ü–∏–∏ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–π',
                '–°–æ–∑–¥–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ç—á–µ—Ç–æ–≤ –∏ –¥–∞—à–±–æ—Ä–¥–æ–≤',
                '–í–Ω–µ–¥—Ä–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —à—Ç—Ä–∞—Ñ—ã –∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏',
                '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏'
            ],
            longTerm: [
                '–°–æ–∑–¥–∞—Ç—å –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Ä—É—à–∏—Ç–µ–ª–µ–π',
                '–í–Ω–µ–¥—Ä–∏—Ç—å –±–ª–æ–∫—á–µ–π–Ω-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–ª—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ —Ç–æ—Ä–≥–æ–≤',
                '–†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –ò–ò-—Å–∏—Å—Ç–µ–º—É –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞—Ä—É—à–µ–Ω–∏–π',
                '–°–æ–∑–¥–∞—Ç—å –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
            ]
        };

        return recommendations;
    }

    displayResults() {
        console.log('\nüéØ –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê');
        console.log('===============================');
        
        if (this.results.summary) {
            console.log('\nüìä –°–¢–ê–¢–£–° –ì–ò–ü–û–¢–ï–ó –ê–ù–ê–¢–û–õ–ò–Ø QGL:');
            console.log('================================');
            
            Object.entries(this.results.summary.hypotheses).forEach(([hypothesis, data]) => {
                const emoji = data.status === 'CONFIRMED' ? '‚úÖ' : data.status === 'NOT_CONFIRMED' ? '‚ùå' : '‚ùì';
                console.log(`${emoji} ${data.description}`);
                console.log(`   –°—Ç–∞—Ç—É—Å: ${data.status}`);
                console.log(`   –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤: ${data.evidence}`);
                console.log('');
            });

            console.log('\nüîç –ö–õ–Æ–ß–ï–í–´–ï –ù–ê–•–û–î–ö–ò:');
            console.log('===================');
            this.results.summary.keyFindings.forEach((finding, index) => {
                console.log(`${index + 1}. ${finding}`);
            });

            console.log('\nüö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
            console.log('============================');
            this.results.summary.recommendations.immediate.forEach((rec, index) => {
                console.log(`${index + 1}. ${rec}`);
            });

            console.log('\nüìà –ü–õ–ê–ù –í–ù–ï–î–†–ï–ù–ò–Ø:');
            console.log('=================');
            if (this.results.antiManipulationPlan?.implementationPlan) {
                const plan = this.results.antiManipulationPlan.implementationPlan;
                Object.entries(plan).forEach(([phase, details]) => {
                    console.log(`\n${phase.toUpperCase()}: ${details.name}`);
                    console.log(`–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${details.duration}`);
                    console.log('–ó–∞–¥–∞—á–∏:');
                    details.tasks.forEach((task, index) => {
                        console.log(`  ${index + 1}. ${task}`);
                    });
                });
            }
        }

        console.log('\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.');
    }

    async runQuickAnalysis() {
        console.log('‚ö° –ë–´–°–¢–†–´–ô –ê–ù–ê–õ–ò–ó –ü–û–í–ï–î–ï–ù–ò–Ø –ù–ê –ê–£–ö–¶–ò–û–ù–ï');
        console.log('=====================================');
        
        try {
            const analyzer = new AuctionBehaviorAnalyzer(this.dbConfig);
            await analyzer.init();
            const results = await analyzer.generateComprehensiveReport();
            await analyzer.close();

            console.log('\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ë–´–°–¢–†–û–ì–û –ê–ù–ê–õ–ò–ó–ê:');
            console.log('===============================');
            console.log(`üìä –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–¥–∞–≤—Ü–æ–≤: ${results.summary.totalSuspiciousSellers}`);
            console.log(`üí∞ –ú–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–æ–≤ —Ü–µ–Ω–∞–º–∏: ${results.summary.totalPriceManipulators}`);
            console.log(`üë• –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤: ${results.summary.totalMultipleAccounts}`);
            console.log(`üé£ –°–ª—É—á–∞–µ–≤ "–ø—Ä–∏–º–∞–Ω–∫–∏": ${results.summary.totalBaitingCases}`);
            console.log(`üîÑ –ü–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫: ${results.summary.totalRepeatedPurchases}`);

            return results;
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –±—ã—Å—Ç—Ä–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞:', error.message);
            throw error;
        }
    }
}

// CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
if (require.main === module) {
    const args = process.argv.slice(2);
    const runner = new AuctionAnalysisRunner();

    async function main() {
        if (args.includes('--quick') || args.includes('-q')) {
            await runner.runQuickAnalysis();
        } else if (args.includes('--help') || args.includes('-h')) {
            console.log(`
üéØ –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ø–æ–≤–µ–¥–µ–Ω–∏—è –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω–µ Wolmar

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
  node run-auction-analysis.js [–æ–ø—Ü–∏–∏]

–û–ø—Ü–∏–∏:
  --quick, -q     –ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑ (—Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏)
  --full, -f      –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
  --help, -h      –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã:
  node run-auction-analysis.js              # –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑
  node run-auction-analysis.js --quick      # –ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑
  node run-auction-analysis.js --help       # –°–ø—Ä–∞–≤–∫–∞
            `);
        } else {
            await runner.runFullAnalysis();
        }
    }

    main().catch(error => {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
        process.exit(1);
    });
}

module.exports = AuctionAnalysisRunner;
