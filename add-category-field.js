const { Pool } = require('pg');
const config = require('./config');

async function addCategoryField() {
    const pool = new Pool(config.dbConfig);
    
    try {
        console.log('üîß –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ category –≤ —Ç–∞–±–ª–∏—Ü—É coin_catalog...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª–µ category
        const checkQuery = `
            SELECT column_name 
            FROM information_schema.columns 
            WHERE table_name = 'coin_catalog' 
            AND column_name = 'category'
        `;
        
        const checkResult = await pool.query(checkQuery);
        
        if (checkResult.rows.length > 0) {
            console.log('‚úÖ –ü–æ–ª–µ category —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
        } else {
            // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ category
            const addColumnQuery = `
                ALTER TABLE coin_catalog 
                ADD COLUMN category VARCHAR(20) DEFAULT 'other'
            `;
            
            await pool.query(addColumnQuery);
            console.log('‚úÖ –ü–æ–ª–µ category –¥–æ–±–∞–≤–ª–µ–Ω–æ');
        }
        
        // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        const createIndexQuery = `
            CREATE INDEX IF NOT EXISTS idx_coin_catalog_category 
            ON coin_catalog(category)
        `;
        
        await pool.query(createIndexQuery);
        console.log('‚úÖ –ò–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–ª—è category —Å–æ–∑–¥–∞–Ω');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        const verifyQuery = `
            SELECT column_name, data_type, column_default
            FROM information_schema.columns 
            WHERE table_name = 'coin_catalog' 
            AND column_name = 'category'
        `;
        
        const verifyResult = await pool.query(verifyQuery);
        if (verifyResult.rows.length > 0) {
            const column = verifyResult.rows[0];
            console.log(`‚úÖ –ü–æ–ª–µ category: ${column.data_type}, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: ${column.column_default}`);
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    } finally {
        await pool.end();
    }
}

addCategoryField();
