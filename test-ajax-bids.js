const WolmarCategoryParser = require('./wolmar-category-parser');

async function testAjaxBids() {
    console.log('üß™ –¢–ï–°–¢–ò–†–£–ï–ú AJAX –ü–ê–†–°–ò–ù–ì –°–¢–ê–í–û–ö');
    console.log('================================');
    
    const parser = new WolmarCategoryParser();
    
    try {
        console.log('\n1Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä...');
        await parser.init();
        
        console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ —Å—Ç–∞–≤–æ–∫ –¥–ª—è –ª–æ—Ç–∞ 2070/7222265...');
        const testUrl = 'https://www.wolmar.ru/auction/2070/7222265?category=bony';
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ—Ç–∞
        await parser.page.goto(testUrl, { waitUntil: 'domcontentloaded', timeout: 30000 });
        
        // –ü–∞—Ä—Å–∏–º –∏—Å—Ç–æ—Ä–∏—é —Å—Ç–∞–≤–æ–∫
        const bidHistory = await parser.parseBidHistory(parser.page);
        
        console.log('\n3Ô∏è‚É£ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–∞—Ä—Å–∏–Ω–≥–∞:');
        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞–≤–æ–∫: ${bidHistory.length}`);
        
        if (bidHistory.length > 0) {
            console.log('\nüí∞ –ü–µ—Ä–≤—ã–µ 5 —Å—Ç–∞–≤–æ–∫:');
            bidHistory.slice(0, 5).forEach((bid, index) => {
                console.log(`   ${index + 1}. ${bid.amount} —Ä—É–±. - ${bid.bidder} (${bid.timestamp}) ${bid.isAutoBid ? '[–ê–í–¢–û–ë–ò–î]' : '[–†–£–ß–ù–ê–Ø]'}`);
            });
            
            // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∞–≤—Ç–æ–±–∏–¥–∞–º
            const autoBids = bidHistory.filter(bid => bid.isAutoBid).length;
            const manualBids = bidHistory.length - autoBids;
            
            console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
            console.log(`   –í—Å–µ–≥–æ —Å—Ç–∞–≤–æ–∫: ${bidHistory.length}`);
            console.log(`   –ê–≤—Ç–æ–±–∏–¥–æ–≤: ${autoBids} (${Math.round(autoBids / bidHistory.length * 100)}%)`);
            console.log(`   –†—É—á–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫: ${manualBids} (${Math.round(manualBids / bidHistory.length * 100)}%)`);
        } else {
            console.log('‚ùå –°—Ç–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.message);
    } finally {
        if (parser.browser) {
            await parser.browser.close();
        }
    }
}

if (require.main === module) {
    testAjaxBids();
}
